package old.man.henderson.client;
import java.io.*;
import java.net.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;
public class Requester{
	Socket requestSocket;
	ObjectOutputStream out;
 	ObjectInputStream in;
 	String message;
	Requester(){}
	Scanner sc = new Scanner(System.in);
	void run()
	{
		try{
			//1. creating a socket to connect to the server
			requestSocket = new Socket("5.4.96.108", 2004);
			System.out.println("Connected to localhost in port 2004");
			//2. get Input and Output streams
			out = new ObjectOutputStream(requestSocket.getOutputStream());
			out.flush();
			in = new ObjectInputStream(requestSocket.getInputStream());
			//3: Communicating with the server
			do{
				try{
					//message = (String)in.readObject();
					message = constructResponse((ResultSet)((SerialWrapper)in.readObject()).o);
					System.out.println("server>" + message);
					//this takes sql queries, will crash if not absolutely perfect, should reboot...
					sendMessage(sc.nextLine());
				}
				catch(ClassNotFoundException classNot){
					System.err.println("data received in unknown format");
				}
			}while(!message.equals("bye"));
		}
		catch(UnknownHostException unknownHost){
			System.err.println("You are trying to connect to an unknown host!");
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
		finally{
			//4: Closing connection
			try{
				in.close();
				out.close();
				requestSocket.close();
			}
			catch(IOException ioException){
				ioException.printStackTrace();
			}
		}
	}
	void sendMessage(String msg)
	{
		try{
			out.writeObject(msg);
			out.flush();
			System.out.println("client>" + msg);
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
	}
	String constructResponse(ResultSet rs){
		String response = "\n";
		
		try {
			int colCount = rs.getMetaData().getColumnCount(); // gets the number of columns so that we know how may to iterate over before we go the the next row
			
			//iterates over the coloumn names and adds them to the response
			for(int i = 1; i <= colCount; i++)
				response = response + rs.getMetaData().getColumnName(i) + " \t ";			
			response = response + "\n";
			
			//iterates over each column and adds the field data to the response, at the end o the row it iterates the row
			while(rs.next()){
				for(int i = 1; i <= colCount; i++)
					response = response + rs.getString(i) + " \t ";
				response = response + "\n";
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
				
		return response;
	}
	public static void main(String args[])
	{
		Requester client = new Requester();
		//while(true){
			client.run();
		//}
	}
}